diff --git a/node_modules/flv.js/.DS_Store b/node_modules/flv.js/.DS_Store
new file mode 100644
index 0000000..df1b2fe
Binary files /dev/null and b/node_modules/flv.js/.DS_Store differ
diff --git a/node_modules/flv.js/src/.DS_Store b/node_modules/flv.js/src/.DS_Store
new file mode 100644
index 0000000..23e992f
Binary files /dev/null and b/node_modules/flv.js/src/.DS_Store differ
diff --git a/node_modules/flv.js/src/core/mse-controller.js b/node_modules/flv.js/src/core/mse-controller.js
index 7974940..6c630db 100644
--- a/node_modules/flv.js/src/core/mse-controller.js
+++ b/node_modules/flv.js/src/core/mse-controller.js
@@ -464,6 +464,10 @@ class MSEController {
                             this._emitter.emit(MSEEvents.BUFFER_FULL);
                         }
                         this._isBufferFull = true;
+                    } else if (error.code === 11) {
+                        // Chrome解码错误
+                        Log.e(this.TAG, error.message);
+                        this._emitter.emit(MSEEvents.ERROR_MSE, {code: error.code, msg: error.message});
                     } else {
                         Log.e(this.TAG, error.message);
                         this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});
@@ -493,6 +497,7 @@ class MSEController {
 
     _onSourceEnded() {
         // fired on endOfStream
+        this._emitter.emit(MSEEvents.SOURCE_ENDED);
         Log.v(this.TAG, 'MediaSource onSourceEnded');
     }
 
diff --git a/node_modules/flv.js/src/core/mse-events.js b/node_modules/flv.js/src/core/mse-events.js
index e2e3452..7d2a444 100644
--- a/node_modules/flv.js/src/core/mse-events.js
+++ b/node_modules/flv.js/src/core/mse-events.js
@@ -17,10 +17,12 @@
  */
 
 const MSEEvents = {
+    ERROR_MSE: 'error_mse',
     ERROR: 'error',
     SOURCE_OPEN: 'source_open',
     UPDATE_END: 'update_end',
-    BUFFER_FULL: 'buffer_full'
+    BUFFER_FULL: 'buffer_full',
+    SOURCE_ENDED: 'source_ended'
 };
 
 export default MSEEvents;
\ No newline at end of file
diff --git a/node_modules/flv.js/src/player/flv-player.js b/node_modules/flv.js/src/player/flv-player.js
index e9a2524..4ee772f 100644
--- a/node_modules/flv.js/src/player/flv-player.js
+++ b/node_modules/flv.js/src/player/flv-player.js
@@ -154,6 +154,17 @@ class FlvPlayer {
                                info
             );
         });
+        this._msectl.on(MSEEvents.ERROR_MSE, (info) => {
+            this._emitter.emit(PlayerEvents.ERROR,
+                               ErrorTypes.MSE_ERROR,
+                               ErrorDetails.MEDIA_MSE_ERROR,
+                               info
+            );
+        });
+
+        this._msectl.on(MSEEvents.SOURCE_ENDED, () => {
+            this._emitter.emit(PlayerEvents.MEDIA_ENDED);
+        });
 
         this._msectl.attachMediaElement(mediaElement);
 
diff --git a/node_modules/flv.js/src/player/player-errors.js b/node_modules/flv.js/src/player/player-errors.js
index e4a92b7..6df916b 100644
--- a/node_modules/flv.js/src/player/player-errors.js
+++ b/node_modules/flv.js/src/player/player-errors.js
@@ -22,6 +22,7 @@ import DemuxErrors from '../demux/demux-errors.js';
 export const ErrorTypes = {
     NETWORK_ERROR: 'NetworkError',
     MEDIA_ERROR: 'MediaError',
+    MSE_ERROR: 'MSEMediaError',
     OTHER_ERROR: 'OtherError'
 };
 
diff --git a/node_modules/flv.js/src/player/player-events.js b/node_modules/flv.js/src/player/player-events.js
index e089627..b32d96a 100644
--- a/node_modules/flv.js/src/player/player-events.js
+++ b/node_modules/flv.js/src/player/player-events.js
@@ -23,7 +23,8 @@ const PlayerEvents = {
     MEDIA_INFO: 'media_info',
     METADATA_ARRIVED: 'metadata_arrived',
     SCRIPTDATA_ARRIVED: 'scriptdata_arrived',
-    STATISTICS_INFO: 'statistics_info'
+    STATISTICS_INFO: 'statistics_info',
+    MEDIA_ENDED: 'media_ended'
 };
 
 export default PlayerEvents;
\ No newline at end of file
