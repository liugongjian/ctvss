import { PlayerType, EnhanceHTMLVideoElement, PlayerConfig } from './Player.d'

/**
 * 播放器基类
 */
export class Player {
  /* 播放器配置 */
  public config: PlayerConfig
  /* 播放器容器 */
  public container: HTMLDivElement
  /* 播放器类型 */
  public type: PlayerType
  /* 播放流地址 */
  public url: string
  /* 是否启用Debug模式 */
  public isDebug: boolean
  /* 是否启用自动播放 */
  public isAutoPlay: boolean
  /* 播放速率 */
  public playbackRate?: number

  /* 播放器实例(Private) */
  public video: EnhanceHTMLVideoElement

  /* H265播放器画布 */
  public canvas: HTMLCanvasElement

  constructor(config: PlayerConfig) {
    this.config = config
    this.container = config.container
    this.type = config.type
    this.url = config.url
    this.isDebug = config.isDebug
    this.isAutoPlay = config.isAutoPlay
    this.playbackRate = config.playbackRate || 1
    this.init()
    this.bindEvent()
    this.setDefault()
  }

  /**
   * 是否已暂停
   */
  public get isPaused() {
    return this.video.paused
  }

  /**
   * 开始播放
   */
  public play() {
    this.video.play()
  }

  /**
   * 暂停
   */
  public pause() {
    this.video.pause()
  }

  /**
   * 跳进(Seek)
   * @param time 秒
   */
  public seek(time: number) {
    this.video.currentTime = time
  }

  /**
   * 开关静音
   * @param muted 是否静音
   */
  public toggleMuteStatus(muted: boolean) {
    this.video.muted = muted
  }

  /**
   * 调整音量
   * @param volume 音量大小，取值0-1
   */
  public setPlayVolume(volume: number) {
    this.video.volume = volume / 100
  }

  /**
   * 设置播放速率
   * @param playbackRate 播放速率
   */
  public setPlaybackRate(playbackRate: number) {
    this.video.playbackRate = playbackRate
  }

  /**
   * 重新加载播放器
   */
  public reloadPlayer() {}

  /**
   * 销毁播放器
   */
  public disposePlayer() {}

  /**
   * 初始化
   */
  protected init() {}

  /**
   * 绑定事件
   */
  protected bindEvent() {}

  /**
   * 设置默认值
   */
  protected setDefault() {}

  /**
   * 检测是否支持自动播放
   */
  protected testAutoPlay() {
    return new Promise(resolve => {
      const audio = document.createElement('audio')
      let mp4 = document.createElement('source')
      mp4.src = 'data:video/mp4;base64,AAAAFGZ0eXBNU05WAAACAE1TTlYAAAOUbW9vdgAAAGxtdmhkAAAAAM9ghv7PYIb+AAACWAAACu8AAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAnh0cmFrAAAAXHRraGQAAAAHz2CG/s9ghv4AAAABAAAAAAAACu8AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAFAAAAA4AAAAAAHgbWRpYQAAACBtZGhkAAAAAM9ghv7PYIb+AAALuAAANq8AAAAAAAAAIWhkbHIAAAAAbWhscnZpZGVBVlMgAAAAAAABAB4AAAABl21pbmYAAAAUdm1oZAAAAAAAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAVdzdGJsAAAAp3N0c2QAAAAAAAAAAQAAAJdhdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAFAAOABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAAEmNvbHJuY2xjAAEAAQABAAAAL2F2Y0MBTUAz/+EAGGdNQDOadCk/LgIgAAADACAAAAMA0eMGVAEABGjuPIAAAAAYc3R0cwAAAAAAAAABAAAADgAAA+gAAAAUc3RzcwAAAAAAAAABAAAAAQAAABxzdHNjAAAAAAAAAAEAAAABAAAADgAAAAEAAABMc3RzegAAAAAAAAAAAAAADgAAAE8AAAAOAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA4AAAAOAAAAFHN0Y28AAAAAAAAAAQAAA7AAAAA0dXVpZFVTTVQh0k/Ou4hpXPrJx0AAAAAcTVREVAABABIAAAAKVcQAAAAAAAEAAAAAAAAAqHV1aWRVU01UIdJPzruIaVz6ycdAAAAAkE1URFQABAAMAAAAC1XEAAACHAAeAAAABBXHAAEAQQBWAFMAIABNAGUAZABpAGEAAAAqAAAAASoOAAEAZABlAHQAZQBjAHQAXwBhAHUAdABvAHAAbABhAHkAAAAyAAAAA1XEAAEAMgAwADAANQBtAGUALwAwADcALwAwADYAMAA2ACAAMwA6ADUAOgAwAAABA21kYXQAAAAYZ01AM5p0KT8uAiAAAAMAIAAAAwDR4wZUAAAABGjuPIAAAAAnZYiAIAAR//eBLT+oL1eA2Nlb/edvwWZflzEVLlhlXtJvSAEGRA3ZAAAACkGaAQCyJ/8AFBAAAAAJQZoCATP/AOmBAAAACUGaAwGz/wDpgAAAAAlBmgQCM/8A6YEAAAAJQZoFArP/AOmBAAAACUGaBgMz/wDpgQAAAAlBmgcDs/8A6YEAAAAJQZoIBDP/AOmAAAAACUGaCQSz/wDpgAAAAAlBmgoFM/8A6YEAAAAJQZoLBbP/AOmAAAAACkGaDAYyJ/8AFBAAAAAKQZoNBrIv/4cMeQ=='
      let webm = document.createElement('source')
      webm.src = 'data:video/webm;base64,'
      audio.appendChild(mp4)
      audio.appendChild(webm)
      document.body.appendChild(audio)

      const onLoad = (isSupport: boolean) => {
        audio.remove()
        resolve(isSupport)
      }

      audio.play().then(() => {
        onLoad(true)
      }).catch(e => {
        console.log(e)
        onLoad(false)
      })
    })
  }

  /**
   * 检测是否有音频
   * H265和RTC需要单独判断
   */
  protected testHasAudio() {
    // @ts-ignore
    const hasAudio = this.video.mozHasAudio || Boolean(this.video.webkitAudioDecodedByteCount) || Boolean(this.video.audioTracks && this.video.audioTracks.length)
    this.config.onTestHasAudio && this.config.onTestHasAudio(hasAudio)
  }

  /**
   * 自动播放视频和音频
   * H265\HLS\RTC 拥有该方法， FLV 等没有
   */
  protected startAutoPlay() {
    if (this.isAutoPlay) {
      try {
        this.testAutoPlay().then(isSupport => {
          if (isSupport) {
            this.video.play()
          } else {
            this.video.muted = true
            this.video.play()
          }
        })
      } catch (e) {
        this.isDebug && console.log(e)
      }
    }
  }

  /**
   * 回调事件
   * 当开始播放
   */
  protected onPlay() {
    this.config.onPlay && this.config.onPlay()
  }

  /**
   * 回调事件
   * 当调整音量
   */
  protected onVolumeChange() {
    this.config.onVolumeChange && this.config.onVolumeChange(this.video.volume, this.video.muted)
  }

  /**
   * 回调事件
   * 当暂停
   */
  protected onPause() {
    this.config.onPause && this.config.onPause()
  }

  /**
   * 回调事件
   * 当重试
   */
  protected onRetry(params?: any) {
    this.config.onRetry && this.config.onRetry(params)
  }

  /**
   * 回调事件
   * 当更新时间
   */
  protected onTimeUpdate() {
    this.config.onTimeUpdate && this.config.onTimeUpdate(this.video.currentTime)
  }

  /**
   * 回调事件
   * 当更新时长
   */
  protected onDurationChange() {
    this.config.onDurationChange && this.config.onDurationChange(this.video.duration)
  }

  /**
   * 回调事件
   * 当播放结束
   */
  protected onEnded() {
    this.config.onEnded && this.config.onEnded()
  }

  /**
   * 回调事件
   * 当跳跃视频时间
   */
  protected onSeeked() {
    this.config.onSeeked && this.config.onSeeked(this.video.currentTime)
  }

  /**
   * 回调事件
   * 当进行预加载
   */
  protected onBuffered() {
    if (this.video.buffered.length) {
      this.config.onBuffered && this.config.onBuffered(this.video.buffered.end(this.video.buffered.length - 1))
    }
  }

  /**
   * 回调事件
   * 当开始加载
   */
  protected onLoadStart() {
    this.config.onLoadStart && this.config.onLoadStart()
  }

  /**
   * 回调事件
   * 当已加载完成可以播放
   */
  protected onCanplay() {
    this.testHasAudio()
    this.config.onCanplay && this.config.onCanplay()
  }
}
